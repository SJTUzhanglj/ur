#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Thu Jun 22 15:31:14 2017

@author: sjtu
"""

import rospy
import tf2_ros
import message_filters
from geometry_msgs.msg import _PoseStamped
import tf2_geometry_msgs.tf2_geometry_msgs

class PoseDrawer:
    def __init__(self):
        self.point_sub_ = message_filters.Subscriber("camera_pose_stamped", _PoseStamped.PoseStamped) 
        self.target_frame = "world"                                             
        self.buffer_ = tf2_ros.Buffer()                                        
        self.tf2_ = tf2_ros.TransformListener(self.buffer_)
        self.point_sub_.registerCallback(self.msgCallback)
        
    def msgCallback(self, point_data):
        point_out = _PoseStamped.PoseStamped()
        #point_data.pose.position.x += 0.1
        #self.buffer_.registration.print_me()
        #point_data = _TransformStamped.TransformStamped(point_data)
        #point_data.header.frame_id = point_data.header.frame_id[1:]
        #print point_data.header.frame_id
        try:
            point_out = self.buffer_.transform(point_data, self.target_frame, timeout=rospy.Duration(1.0))
            #trans = self.buffer_.lookup_transform(self.target_frame,'turtle2', rospy.Time())
#            rospy.INFO("point of turtle 3 in frame of turtle 1 Position(x:{} y:{} z:{}) \n".format(
#                       point_out.point.x,
#                       point_out.point.y,
#                       point_out.point.z))
            print point_out
        except (tf2_ros.LookupException, tf2_ros.ConnectivityException, tf2_ros.ExtrapolationException),e:
            rospy.WARN("Failure {}\n".format(e) )
            #pass
#       return
            
if __name__ == '__main__':
    rospy.init_node("pose_drawer")
    pd = PoseDrawer()
    rospy.spin()
