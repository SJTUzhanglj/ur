#!/usr/bin/env python  
import rospy

import math
import tf2_ros
import tf2_msgs.msg
import geometry_msgs.msg


if __name__ == '__main__':
    rospy.init_node('camera_in_object')
    tfBuffer = tf2_ros.Buffer()
    listener = tf2_ros.TransformListener(tfBuffer)
    rate = rospy.Rate(30.0)
    #obj_pose_pub = rospy.Publisher('/camera_in_object', tf2_msgs.msg.TFMessage, queue_size=1)
    while not rospy.is_shutdown():
        print tfBuffer.can_transform('base', 'object', rospy.Time())
        try:
            
            trans = tfBuffer.lookup_transform('object', 'camera_frame', rospy.Time())
            print trans
            
        except (tf2_ros.LookupException, tf2_ros.ConnectivityException, tf2_ros.ExtrapolationException):
            rate.sleep()
            continue

